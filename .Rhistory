library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key="11d661b0ddf80acebef1", secret="f5af9173890dedaf37a41ecf1000f9cf8a38282d")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
class(req)
head(req)
head(req,10)
names(req)
library(jsonlite)
jsonData <- fromJSON(req)
json2 <- jsonlite::fromJSON(toJSON(req))
install.packages("jsonlite")
json2 <- jsonlite::fromJSON(toJSON(req))
jsonsss <- toJSON(req)
json2 <- jsonlite::fromJSON(toJSON(req))
req
req[[1]]
req[[2]]
req[[3]]
req[[4]]
req[[5]]
req[[6]]
req[[7]]
req[[8]]
req[[9]]
req[[10]]
json2 <- jsonlite::fromJSON(toJSON(req))
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
json2 <- jsonlite::fromJSON(toJSON(req))
stop_for_status(req)
json1 <- content(req)
json2 <- jsonlite::fromJSON(toJSON(json1))
class(json2)
names(json2)
json2$name
json2$id
names(json2)
json2$full_name
json2$owner
names(json2)
json2$created_at
names(json2)
json2$name
json2$created_at
q()
install.packages("knitr")
install.packages("swirl")
install.packages(pandoc)
?pandoc
??Pandoc
??pandoc
x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0, 2, 0, 0)
plot(x, y, lwd = 3, frame = FALSE, type = "l")
x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0, 2, 0, 0)
plot(x, y, lwd = 3, type = "l")
x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0, 2, 0, 0)
plot(x, y, lwd = 3, frame = FALSE, type = "l")
?pbeta
pbeta(0.75, 2, 1)
pbeta(c(0.4, 0.5, 0.6), 2, 1)
pbeta(c(0.4, 0.5), 2, 1)
qbeta(0.5, 2, 1)
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
0.8
0.72
0.64
64%
0.64
mypdf
?integrate
integrate(mypdf, 0, 1.6)
sqrt(2)
library(swirl)
swirl()
swirl()
coinPLot(19)
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
0.6 + c(1,-1) * qnorm(0.975) *sqrt(0.6 * (1 - 0.6)/100)
0.6 + c(-1,1) * qnorm(0.975) *sqrt(0.6 * (1 - 0.6)/100)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binom.test(60,100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(0.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
?qnorm
pnorm(70, mean = 80, sd = 10)
qnorm(0.95, mean = 100, sd = 75)
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 0.75)
qnorm(0.95, mean = 1100, sd = 75/100)
qnorm(0.95, mean = 1100, sd = 75/10)
?rbinom
1 - pbinom(3, size = 5, prob = 0.5)
(1/12)/sqrt(1000)
?ppois
ppois(10,lambda = 5*3)
data(sleep)
head(sleep,20)
dim(sleep)
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(0.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g1 - g2
difference <- g2 - g1
mean(difference)
s <- sc(difference)
s <- sd(difference)
mn
mn + c(-1,1)*qt(0.975,9)*s/sqrt(10)
t.test(difference)$conf.int
sp<- 7*15.34 + 20*18.23
sp<- 7*15.34^2 + 20*18.23^2
ns <- 27
sp <- sqrt(sp/ns)
132.86 - 127-44 + c(-1,1)*qt(0.975,27)*sp*sqrt(1/8 + 1/21)
132.86 - 127-44 + c(-1,1)*qt(0.975,ns)*sp*sqrt(1/8 + 1/21)
132.86 - 127.44 + c(-1,1)*qt(0.975,ns)*sp*sqrt(1/8 + 1/21)
sp <- (9*var(g1) + 9*var(g2))/18
sp <- sqrt(9*var(g1) + 9*var(g2))/18
sp <- sqrt((9*var(g1) + 9*var(g2))/18
sp <- sqrt(((9*var(g1) + 9*var(g2))/18)
sp <- sqrt((9*var(g1) + 9*var(g2))/18)
md + c(-1,1)*qt(0.975,18)*sp*sqrt(2/10)
md + c(-1,1)*qt(0.975,18)*sp*sqrt(1/5)
t.test(g2-g1,paired=FALSE,var.equal=TRUE)
t.test(g2-g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num <- (15.34^2/8)/7 + (18.23^2/21)/20
num <- (15.34^2/8 + 18.23^2/21)^2
den <- (15.34^2/8)/7 + (18.23^2/21)/20
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86 - 127.44 + c(-1,1)*qt(0.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
library(datasets)
data(ChickWeight)
library(reshape2)
head(ChickWeight)
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = Weight)
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
head(wideCW)
dim(wideCW)
head(ChickWeight, 20)
levels(wideCW$diet)
levels(wideCW$Diet)
levels(wideCW$Chick)
sum(levels(wideCW$Chick))
lebgth(levels(wideCW$Chick))
length(levels(wideCW$Chick))
dim(wideCW$Chick)
dim(wideCW)
qt(0.95,23)
qt(0.05,23)
pt(-2.725, 23)
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(te)
head(trees)
fit <- lm (Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit, fit2), coef)
library(swirl)
swirl()
swirl()
6
dim(InsecSprays)
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays, 15)
SB
sB
summary(InsectSprays[,2])
sapply(InsectSprays, 1, class)
sapply(InsectSprays, class)
fit <- lm(count, spray, InsectSprays)
fit <- lm(count ~ spray, InsectSprays)
summary(fit)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSpray$spray, "C")
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray, spray2)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[C] - fit$coef[2])/1.6011
(fit$coef[2] - fit$coef[3])/1.6011
swirl()
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, hunger$Sex == "Female")
lmF <- lm(Numeric[hunger$Sex == "Female"] ~ Year[hunger$Sex == "Female"], hunger)
lmM <- lm(Numeric[hunger$Sex == "Male"] ~ Year[hunger$Sex == "Male"], hunger)
lmBoth <- lm(Numeric ~ Year + Sex)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)$coef
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
swirl()
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which=1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict[fitno, out2[1,]]
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1 - resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sqrt(sum(fit$res^2)/fit$df)
rstd <- fit$res/sigma*sqrt(1-hatvalues(fit))
rstd <- fit$res/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd,rstandard(fit)))
plot(fit, which = 3)
plot(fit, which = 2)
sigma1 <- sqrt(sum(fitno$res^2)/fitno$df)
resid(fit)[1]/(sigma*sqrt(1-hatvalues(fit)[1]))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit)[1])
head(rstudent(fit))
dy >- predict(fitno, out2) - predict(fit, out2)
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2)/(2*sigma^2)
plot(fit,which=5)
install.packages("caret")
install.packages(c(“Rcpp”, “httpuv”, “shiny”)
install.packages(c(“Rcpp”, “httpuv”, “shiny”))
install.packages(c(“Rcpp”, “httpuv”, “shiny”))
install.packages(c("Rcpp", "httpuv", "shiny"))
library(Rtools)
install.packages("Rtools")
setwd("R/Learning/8.- Data Products/ProjectC/ç")
setwd("R/Learning/8.- Data Products/ProjectC/")
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
heac(cocaine)
head(cocaine)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
